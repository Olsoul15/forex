version: '3.8'

services:
  # PostgreSQL database service
  postgres:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-forex_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-forex_password}
      POSTGRES_DB: ${POSTGRES_DB:-forex_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U forex_user -d forex_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - forex_network

  # Redis cache service
  redis:
    image: redis:7.2-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-forex_redis_password}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - forex_network

  # Web Dashboard service
  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${WEB_PORT:-8000}:8000"
    volumes:
      - .:/app
    command: uvicorn forex_ai.api.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped
    networks:
      - forex_network

  # N8N workflow automation service
  n8n:
    image: n8nio/n8n:latest
    ports:
      - "${N8N_PORT:-5678}:5678"
    environment:
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-forex_n8n_encryption_key}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-forex_db}
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-forex_user}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-forex_password}
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - forex_network

volumes:
  postgres_data:
  redis_data:
  n8n_data:

networks:
  forex_network:
    driver: bridge 